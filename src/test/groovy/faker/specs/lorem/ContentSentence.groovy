package faker.specs.lorem

import spock.lang.Specification
import faker.Faker
import faker.Lorem
import faker.specs.support.Localized


@Localized
class ContentSentence extends Specification {

    def static standardWordList
    def static completeWordList

    def setupSpec() {
        standardWordList = Faker.bundles["faker.lorem.words"]
        completeWordList = standardWordList + Faker.bundles["faker.lorem.supplemental"]
    }

    def "sentence content, from standard word list"(def sentence) {
        expect: "the sentence must consist of words from the standard word list"
        sentence.chop().split(' ').each { word ->
            assert word.toLowerCase() in standardWordList
        }

        where: "the sentence is generated by Lorem.sentence()"
        sentence << (1..100).collect { Lorem.sentence() }
    }

    def "sentence content, from complete word list"(def sentence) {
        expect: "the sentence must consist of words from the standard word list"
        sentence.scan(~/\w+/).each { word ->
            assert word.toLowerCase() in completeWordList
        }

        where: "the sentence is generated by Lorem.sentence()"
        sentence << (1..100).collect { Lorem.sentence(true) }
    }

    def "sentence structure"(def sentence) {
        expect: "the sentence should start with an uppercase character"
        assert (sentence[0] as Character).isUpperCase()

        and: "the sentence should end with a period"
        assert sentence.endsWith(".")

        where: "the sentence is generated by Lorem.sentence()"
        sentence << (1..100).collect { Lorem.sentence() }
    }
}